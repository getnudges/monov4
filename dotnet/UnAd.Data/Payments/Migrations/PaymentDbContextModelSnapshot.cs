// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UnAd.Data.Payments;

#nullable disable

namespace UnAd.Data.Payments.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    partial class PaymentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UnAd.Data.Payments.Models.MerchantService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("merchant_service_pkey");

                    b.ToTable("merchant_service", (string)null);
                });

            modelBuilder.Entity("UnAd.Data.Payments.Models.PaymentConfirmation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("ConfirmationCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("confirmation_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<int?>("MerchantServiceId")
                        .HasColumnType("integer")
                        .HasColumnName("merchant_service_id");

                    b.HasKey("Id")
                        .HasName("payment_confirmation_pkey");

                    b.HasIndex("MerchantServiceId");

                    b.ToTable("payment_confirmation", (string)null);
                });

            modelBuilder.Entity("UnAd.Data.Payments.Models.PaymentConfirmation", b =>
                {
                    b.HasOne("UnAd.Data.Payments.Models.MerchantService", "MerchantService")
                        .WithMany("PaymentConfirmations")
                        .HasForeignKey("MerchantServiceId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("payment_confirmation_merchant_service_id_fkey");

                    b.Navigation("MerchantService");
                });

            modelBuilder.Entity("UnAd.Data.Payments.Models.MerchantService", b =>
                {
                    b.Navigation("PaymentConfirmations");
                });
#pragma warning restore 612, 618
        }
    }
}
