// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Nudges.Data.Products;

#nullable disable

namespace Nudges.Data.Products.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20241004012408_AddForeignServiceIdToPriceTier")]
    partial class AddForeignServiceIdToPriceTier
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Nudges.Data.Products.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<int?>("DiscountCodeId")
                        .HasColumnType("integer")
                        .HasColumnName("discount_code_id");

                    b.Property<Guid?>("PlanSubscriptionId")
                        .HasColumnType("uuid")
                        .HasColumnName("plan_subscription_id");

                    b.HasKey("Id")
                        .HasName("discount_pkey");

                    b.HasIndex(new[] { "DiscountCodeId" }, "IX_discount_discount_code_id");

                    b.HasIndex(new[] { "PlanSubscriptionId" }, "IX_discount_plan_subscription_id");

                    b.ToTable("discount", (string)null);
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.DiscountCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("Discount")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("discount");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("interval")
                        .HasColumnName("duration");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiry_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int?>("PriceTierId")
                        .HasColumnType("integer")
                        .HasColumnName("price_tier_id");

                    b.HasKey("Id")
                        .HasName("discount_code_pkey");

                    b.HasIndex(new[] { "PriceTierId" }, "IX_discount_code_price_tier_id");

                    b.ToTable("discount_code", (string)null);
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ForeignServiceId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("foreign_service_id");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("icon_url");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("plan_pkey");

                    b.ToTable("plan", (string)null);
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.PlanFeature", b =>
                {
                    b.Property<int>("PlanId")
                        .HasColumnType("integer")
                        .HasColumnName("plan_id");

                    b.Property<bool?>("AiSupport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("ai_support");

                    b.Property<int?>("MaxMessages")
                        .HasColumnType("integer")
                        .HasColumnName("max_messages");

                    b.Property<string>("SupportTier")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("support_tier");

                    b.HasKey("PlanId")
                        .HasName("plan_features_pkey");

                    b.ToTable("plan_features", (string)null);
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.PlanSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid")
                        .HasColumnName("client_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_date");

                    b.Property<Guid>("PaymentConfirmationId")
                        .HasColumnType("uuid")
                        .HasColumnName("payment_confirmation_id");

                    b.Property<int?>("PriceTierId")
                        .HasColumnType("integer")
                        .HasColumnName("price_tier_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'INACTIVE'::character varying");

                    b.HasKey("Id")
                        .HasName("plan_subscription_pkey");

                    b.HasIndex(new[] { "PriceTierId" }, "IX_plan_subscription_price_tier_id");

                    b.ToTable("plan_subscription", (string)null);
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.PriceTier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval")
                        .HasColumnName("duration");

                    b.Property<string>("ForeignServiceId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("foreign_service_id");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("icon_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int?>("PlanId")
                        .HasColumnType("integer")
                        .HasColumnName("plan_id");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("price_tier_pkey");

                    b.HasIndex(new[] { "PlanId" }, "IX_price_tier_plan_id");

                    b.ToTable("price_tier", (string)null);
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.Trial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("PlanSubscriptionId")
                        .HasColumnType("uuid")
                        .HasColumnName("plan_subscription_id");

                    b.Property<int?>("TrailOfferId")
                        .HasColumnType("integer")
                        .HasColumnName("trail_offer_id");

                    b.HasKey("Id")
                        .HasName("trial_pkey");

                    b.HasIndex(new[] { "PlanSubscriptionId" }, "IX_trial_plan_subscription_id");

                    b.HasIndex(new[] { "TrailOfferId" }, "IX_trial_trail_offer_id");

                    b.ToTable("trial", (string)null);
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.TrialOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval")
                        .HasColumnName("duration");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiry_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int?>("PriceTierId")
                        .HasColumnType("integer")
                        .HasColumnName("price_tier_id");

                    b.HasKey("Id")
                        .HasName("trial_offer_pkey");

                    b.HasIndex(new[] { "PriceTierId" }, "IX_trial_offer_price_tier_id");

                    b.ToTable("trial_offer", (string)null);
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.Discount", b =>
                {
                    b.HasOne("Nudges.Data.Products.Models.DiscountCode", "DiscountCode")
                        .WithMany("Discounts")
                        .HasForeignKey("DiscountCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("discount_discount_code_id_fkey");

                    b.HasOne("Nudges.Data.Products.Models.PlanSubscription", "PlanSubscription")
                        .WithMany("Discounts")
                        .HasForeignKey("PlanSubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("discount_plan_subscription_id_fkey");

                    b.Navigation("DiscountCode");

                    b.Navigation("PlanSubscription");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.DiscountCode", b =>
                {
                    b.HasOne("Nudges.Data.Products.Models.PriceTier", "PriceTier")
                        .WithMany("DiscountCodes")
                        .HasForeignKey("PriceTierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("discount_code_price_tier_id_fkey");

                    b.Navigation("PriceTier");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.PlanFeature", b =>
                {
                    b.HasOne("Nudges.Data.Products.Models.Plan", "Plan")
                        .WithOne("PlanFeature")
                        .HasForeignKey("Nudges.Data.Products.Models.PlanFeature", "PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("plan_features_plan_id_fkey");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.PlanSubscription", b =>
                {
                    b.HasOne("Nudges.Data.Products.Models.PriceTier", "PriceTier")
                        .WithMany("PlanSubscriptions")
                        .HasForeignKey("PriceTierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("plan_subscription_price_tier_id_fkey");

                    b.Navigation("PriceTier");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.PriceTier", b =>
                {
                    b.HasOne("Nudges.Data.Products.Models.Plan", "Plan")
                        .WithMany("PriceTiers")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("price_tier_plan_id_fkey");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.Trial", b =>
                {
                    b.HasOne("Nudges.Data.Products.Models.PlanSubscription", "PlanSubscription")
                        .WithMany("Trials")
                        .HasForeignKey("PlanSubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("trial_plan_subscription_id_fkey");

                    b.HasOne("Nudges.Data.Products.Models.TrialOffer", "TrailOffer")
                        .WithMany("Trials")
                        .HasForeignKey("TrailOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("trial_trail_offer_id_fkey");

                    b.Navigation("PlanSubscription");

                    b.Navigation("TrailOffer");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.TrialOffer", b =>
                {
                    b.HasOne("Nudges.Data.Products.Models.PriceTier", "PriceTier")
                        .WithMany("TrialOffers")
                        .HasForeignKey("PriceTierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("trial_offer_price_tier_id_fkey");

                    b.Navigation("PriceTier");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.DiscountCode", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.Plan", b =>
                {
                    b.Navigation("PlanFeature");

                    b.Navigation("PriceTiers");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.PlanSubscription", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Trials");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.PriceTier", b =>
                {
                    b.Navigation("DiscountCodes");

                    b.Navigation("PlanSubscriptions");

                    b.Navigation("TrialOffers");
                });

            modelBuilder.Entity("Nudges.Data.Products.Models.TrialOffer", b =>
                {
                    b.Navigation("Trials");
                });
#pragma warning restore 612, 618
        }
    }
}
